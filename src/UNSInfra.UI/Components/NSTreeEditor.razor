@using UNSInfra.Services
@using UNSInfra.Models.Hierarchy
@using UNSInfra.Models.Namespace
@using UNSInfra.Services.TopicBrowser
@inject INamespaceStructureService NamespaceStructureService

<div class="ns-tree-editor">
    <div class="d-flex justify-content-between align-items-center mb-3">
       <!-- <h6 class="mb-0">üìÅ NS Structure</h6> -->
        <button class="btn btn-sm btn-outline-primary" @onclick="AddRootNode">
            <i class="bi bi-plus-circle"></i> Add Root
        </button>
    </div>

    @if (isLoading)
    {
        <div class="text-center py-3">
            <div class="spinner-border spinner-border-sm" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <small class="text-muted ms-2">Loading NS structure...</small>
        </div>
    }
    else if (nsTreeNodes?.Any() == true)
    {
        <div class="ns-tree-container">
            @foreach (var rootNode in nsTreeNodes)
            {
                <NSTreeNodeEditor Node="rootNode" OnNodeChanged="RefreshTree" OnAddDataToNamespace="OnAddDataToNamespace" OnTopicSelected="OnTopicSelected" />
            }
        </div>
    }
    else
    {
        <div class="text-center py-4">
            <i class="bi bi-folder2-open text-muted" style="font-size: 2rem;"></i>
            <p class="text-muted mt-2 mb-3">No NS structure created yet</p>
            <button class="btn btn-primary btn-sm" @onclick="AddRootNode">
                <i class="bi bi-plus-circle"></i> Create First Root Node
            </button>
        </div>
    }
</div>

<!-- Add Root Node Modal -->
@if (showAddRootModal)
{
    <div class="modal fade show d-block" tabindex="-1" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 1050;">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Root Hierarchy Node</h5>
                    <button type="button" class="btn-close" @onclick="HideAddRootModal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Hierarchy Type</label>
                        <select class="form-select" @bind="selectedRootHierarchyNodeId">
                            <option value="">Select hierarchy type...</option>
                            @if (availableRootHierarchyNodes != null)
                            {
                                @foreach (var hierarchyNode in availableRootHierarchyNodes)
                                {
                                    <option value="@hierarchyNode.Id">@hierarchyNode.Name - @hierarchyNode.Description</option>
                                }
                            }
                        </select>
                        <div class="form-text">
                            Root nodes are typically Enterprise level in ISA-S95 hierarchy.
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Instance Name</label>
                        <input type="text" class="form-control" @bind="newRootInstanceName" placeholder="e.g., Enterprise1, MyCompany, MainSite" />
                        <div class="form-text">
                            Give this instance a meaningful name that identifies this specific hierarchy level.
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="HideAddRootModal">Cancel</button>
                    <button type="button" class="btn btn-primary" @onclick="AddRootHierarchyInstance" 
                            disabled="@(string.IsNullOrEmpty(selectedRootHierarchyNodeId) || string.IsNullOrEmpty(newRootInstanceName))">
                        Create Root Node
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public EventCallback<string> OnAddDataToNamespace { get; set; }
    [Parameter] public EventCallback<TopicInfo> OnTopicSelected { get; set; }
    
    private List<NSTreeNode>? nsTreeNodes;
    private bool isLoading = true;
    private bool showAddRootModal = false;
    private string selectedRootHierarchyNodeId = "";
    private string newRootInstanceName = "";
    private List<HierarchyNode>? availableRootHierarchyNodes;

    protected override async Task OnInitializedAsync()
    {
        await RefreshTree();
    }

    private async Task RefreshTree()
    {
        isLoading = true;
        StateHasChanged();

        try
        {
            var nsTree = await NamespaceStructureService.GetNamespaceStructureAsync();
            nsTreeNodes = nsTree.ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading NS tree: {ex.Message}");
            nsTreeNodes = new List<NSTreeNode>();
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task AddRootNode()
    {
        // Load available root hierarchy nodes
        availableRootHierarchyNodes = (await NamespaceStructureService.GetAvailableHierarchyNodesAsync(null)).ToList();
        
        selectedRootHierarchyNodeId = "";
        newRootInstanceName = "";
        showAddRootModal = true;
        StateHasChanged();
    }

    private void HideAddRootModal()
    {
        showAddRootModal = false;
        StateHasChanged();
    }

    private async Task AddRootHierarchyInstance()
    {
        if (string.IsNullOrEmpty(selectedRootHierarchyNodeId) || string.IsNullOrEmpty(newRootInstanceName))
            return;

        try
        {
            await NamespaceStructureService.AddHierarchyInstanceAsync(selectedRootHierarchyNodeId, newRootInstanceName, null);
            
            HideAddRootModal();
            await RefreshTree();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding root hierarchy instance: {ex.Message}");
        }
    }
}

<style>
.ns-tree-editor {
    
    /* Removed max-height and overflow to allow modals to display properly */
}

.ns-tree-container {
    /* Removed max-height and overflow to allow modals to display properly */
}
</style>